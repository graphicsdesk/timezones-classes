{"version":3,"sources":["scripts/scriptsl.js"],"names":["container","d3","select","figure","article","stepSel","selectAll","render","margin","svg","csv","require","data","map","d","npbysem","keys","allGroup","x","scaleLinear","domain","range","width","xAxisGenerator","axisBottom","ticks","tickSize","tickPadding","tickLabels","tickFormat","i","xAxis","append","call","attr","height","y","yAxisGenerator","axisLeft","yAxis","remove","scroller","scrollama","handleResize","stepH","Math","floor","window","innerHeight","style","figureHeight","figureMarginTop","resize","handleStepEnter","response","updateChart","index","datanew","filter","hour","bins","histogram","value","thresholds","transition","duration","u","enter","merge","x0","length","x1","element","classList","add","setup","step","offset","debug","onStepEnter","addEventListener","document","$","on","top","right","bottom","left","innerWidth","body","clientWidth"],"mappings":"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","file":"scriptsl.98fd0df2.js","sourceRoot":"../src","sourcesContent":["const container = d3.select('#scrolly-side');\r\nvar figure = container.select('figure');\r\nvar article = container.select('article');\r\nconst stepSel = article.selectAll('.step');\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\tvar margin, svg;\r\n\r\n\t$(window).on('resize', function () {\r\n\t\tvar nw = $(window).width();\r\n\t\tif (nw < 500) {\r\n\t\t\t\r\n\r\n\t\t} else {\r\n\t\t\tmargin = { top: 30, right: 80, bottom: 30, left: 80 },\r\n\t\t\t\twidth = window.innerWidth * 1 - margin.left - margin.right,\r\n\t\t\t\theight = window.innerHeight * 0.95 - margin.top - margin.bottom;\r\n\r\n\t\t\t// append the svg object to the body of the page\r\n\t\t\td3.select(\"#my_dataviz\")\r\n\t\t\t\t.select(\"svg\")\r\n\t\t\t\t.remove()\r\n\r\n\t\t\tsvg = d3.select(\"#my_dataviz\")\r\n\t\t\t\t.append(\"svg\")\r\n\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"transform\",\r\n\t\t\t\t\t\"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\t\t\td3.selectAll(\"svg\")\r\n\t\t\t\t.style(\"background-color\", \"#201c38\");\r\n\r\n\t\t}\r\n\t\trender(margin, svg)\r\n\t})\r\n\r\n\tif ($(window).width() < 500) {\r\n\t\t\theight = window.innerWidth/1.5,\r\n\t\t\twidth = window.innerHeight/1.5;\r\n\r\n\t\t// append the svg object to the body of the page\r\n\t\tsvg = d3.select(\"#my_dataviz\")\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", \"80vh\")\r\n\t\t\t.attr(\"height\", \"100vw\")\r\n\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"style\",\r\n\t\t\t\t\"transform:translate(\" + \"0\" + \",\" + \"0\" + \")\");\r\n\t}\r\n\telse {\r\n\t\t// set the dimensions and margins of the graph\r\n\t\tmargin = { top: 30, right: 80, bottom: 30, left: 80 },\r\n\t\t\twidth = document.body.clientWidth * 1 - margin.left - margin.right,\r\n\t\t\theight = window.innerHeight * 0.95 - margin.top - margin.bottom;\r\n\r\n\t\t// append the svg object to the body of the page\r\n\t\tsvg = d3.select(\"#my_dataviz\")\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\r\n\t\t\t.append(\"g\")\r\n\t\t\t.attr(\"transform\",\r\n\t\t\t\t\"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\t\td3.selectAll(\"svg\")\r\n\t\t\t.style(\"background-color\", \"#201c38\");\r\n\t}\r\n\trender(margin, svg);\r\n\r\n\tif ($(window).width() < 500) {\r\n\t\td3.selectAll('svg').attr(\"transform\", \"rotate(90)\");\r\n\t\td3.selectAll('g.tick').attr(\"transform\", \"rotate(-90)\");\r\n\t}\r\n\r\n});\r\n\r\nfunction render(margin, svg) {\r\n\r\n\td3.csv(require(\"./sl.csv\"), function (data) {\r\n\r\n\t\t// List of groups (here I have one group per column)\r\n\t\tvar allGroup = d3.map(data, function (d) { return (d.npbysem) }).keys()\r\n\r\n\t\t// X axis: scale and draw:\r\n\t\tvar x = d3.scaleLinear()\r\n\t\t\t.domain([0, 24])\r\n\t\t\t.range([0, width]);\r\n\r\n\t\tlet xAxisGenerator = d3.axisBottom(x);\r\n\t\txAxisGenerator.ticks(25);\r\n\t\txAxisGenerator.tickSize(0);\r\n\t\txAxisGenerator.tickPadding(8);\r\n\r\n\t\tlet tickLabels = ['00:00', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24:00 GMT+9'];\r\n\t\txAxisGenerator.tickFormat((d, i) => tickLabels[i]);\r\n\r\n\t\tlet xAxis = svg.append(\"g\")\r\n\t\t\t.call(xAxisGenerator)\r\n\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\");\r\n\r\n\t\txAxis.selectAll(\".tick text\")\r\n\t\t\t.attr(\"fill\", \"#D2D2D2\")\r\n\t\t\t.attr(\"font-size\", \"13\")\r\n\t\t\t.attr(\"font-family\", \"Roboto\");\r\n\r\n\t\txAxis.select(\".tick:nth-child(26)\")\r\n\t\t\t.selectAll(\"text\")\r\n\t\t\t.attr(\"dx\", \"25\");\r\n\r\n\t\t// Y axis: initialization\r\n\t\tvar y = d3.scaleLinear()\r\n\t\t\t.range([height, 0]);\r\n\r\n\t\tlet yAxisGenerator = d3.axisLeft(y);\r\n\t\tyAxisGenerator.tickSize(-width);\r\n\t\tyAxisGenerator.tickPadding(8);\r\n\r\n\t\tlet yAxis = svg.append(\"g\");\r\n\r\n\t\tyAxis.selectAll(\".domain\").remove()\r\n\r\n\t\t// instantiate the scrollama\r\n\t\tconst scroller = scrollama();\r\n\r\n\t\t// generic window resize listener event\r\n\t\tfunction handleResize() {\r\n\t\t\t// 1. update height of step elements\r\n\t\t\tvar stepH = Math.floor(window.innerHeight * 0.2);\r\n\t\t\tstepSel.style('height', stepH + 'px');\r\n\r\n\t\t\tvar figureHeight = window.innerHeight / 1.25\r\n\t\t\tvar figureMarginTop = (window.innerHeight - figureHeight) / 2\r\n\t\t\tfigure\r\n\t\t\t\t.style('height', figureHeight + 'px')\r\n\t\t\t\t.style('top', figureMarginTop + 'px');\r\n\t\t\t// 3. tell scrollama to update new element dimensions\r\n\t\t\tscroller.resize();\r\n\t\t}\r\n\r\n\t\t// scrollama event handlers\r\n\t\tfunction handleStepEnter(response) {\r\n\t\t\tupdateChart(response.index)\r\n\t\t\tresponse.element.classList.add(\"is-active\");\r\n\t\t}\r\n\r\n\t\tfunction updateChart(index) {\r\n\t\t\t//filter data by semester\r\n\t\t\tvar datanew = data\r\n\t\t\t\t.filter(function (d) {\r\n\t\t\t\t\tif (+d.npbysem == index) {\r\n\t\t\t\t\t\treturn d.hour;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t// set the parameters for the histogram\r\n\t\t\tvar histogram = d3.histogram()\r\n\t\t\t\t.value(function (d) { return d.hour; })   // I need to give the vector of value\r\n\t\t\t\t.domain(x.domain())  // then the domain of the graphic\r\n\t\t\t\t.thresholds(x.ticks(24)); // then the numbers of bins\r\n\r\n\t\t\t// And apply this function to data to get the bins\r\n\t\t\tvar bins = histogram(datanew);\r\n\r\n\t\t\t// Y axis: update now that we know the domain\r\n\t\t\tif (index == 3) {\r\n\t\t\t\ty.domain([0, 50]);\r\n\t\t\t\tlet tickLabels = ['0', '5', '10', '15', '20', '25', '30', '35', '40', '45', '50 classes'];\r\n\t\t\t\tyAxisGenerator.tickFormat((d, i) => tickLabels[i]);\r\n\t\t\t}\r\n\t\t\telse if (index == 4) {\r\n\t\t\t\ty.domain([0, 450]);\r\n\t\t\t\tlet tickLabels = ['0', '50', '100', '150', '200', '250', '300', '350', '400', '450 classes'];\r\n\t\t\t\tyAxisGenerator.tickFormat((d, i) => tickLabels[i]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ty.domain([0, 45]);\r\n\t\t\t\tlet tickLabels = ['0', '5', '10', '15', '20', '25', '30', '35', '40', '45 classes'];\r\n\t\t\t\tyAxisGenerator.tickFormat((d, i) => tickLabels[i]);\r\n\t\t\t}   // d3.hist has to be called before the Y axis obviously\r\n\r\n\t\t\tyAxis\r\n\t\t\t\t.transition()\r\n\t\t\t\t.duration(1000)\r\n\t\t\t\t.call(yAxisGenerator);\r\n\r\n\t\t\tyAxis\r\n\t\t\t\t.selectAll(\"g path\")\r\n\t\t\t\t.attr(\"opacity\", \"0\");\r\n\r\n\t\t\tyAxis\r\n\t\t\t\t.selectAll(\".tick text\")\r\n\t\t\t\t.attr(\"fill\", \"#D2D2D2\")\r\n\t\t\t\t.attr(\"font-size\", \"13\");\r\n\r\n\t\t\tyAxis\r\n\t\t\t\t.selectAll(\".tick line\")\r\n\t\t\t\t.attr(\"stroke\", \"#D2D2D2\");\r\n\r\n\t\t\t// Join the rect with the bins data\r\n\t\t\tvar u = svg.selectAll(\"rect\")\r\n\t\t\t\t.data(bins)\r\n\r\n\t\t\t// Manage the existing bars and eventually the new ones:\r\n\t\t\tu\r\n\t\t\t\t.enter()\r\n\t\t\t\t.append(\"rect\") // Add a new rect for each new elements\r\n\t\t\t\t.merge(u) // get the already existing elements as well\r\n\t\t\t\t.transition() // and apply changes to all of them\r\n\t\t\t\t.duration(1000)\r\n\t\t\t\t.attr(\"x\", 1)\r\n\t\t\t\t.attr(\"transform\", function (d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\r\n\t\t\t\t.attr(\"width\", function (d) { return x(d.x1) - x(d.x0) ; })\r\n\t\t\t\t.attr(\"height\", function (d) { return height - y(d.length); })\r\n\t\t\t\t.style(\"fill\", \"#5168A6\")\r\n\t\t\t\t.attr(\"opacity\", \"90%\")\r\n\t\t}\r\n\r\n\r\n\t\tfunction init() {\r\n\t\t\t//Stickyfill.add(d3.select('.sticky').node());\r\n\r\n\t\t\t// 1. force a resize on load to ensure proper dimensions are sent to scrollama\r\n\t\t\thandleResize();\r\n\r\n\t\t\t// 2. setup the scroller passing options\r\n\t\t\t// this will also initialize trigger observations\r\n\t\t\t// 3. bind scrollama event handlers (this can be chained like below)\r\n\t\t\tscroller.setup({\r\n\t\t\t\tstep: '#scrolly-side article .step',\r\n\t\t\t\toffset: 0.67,\r\n\t\t\t\tdebug: false\r\n\t\t\t})\r\n\t\t\t\t.onStepEnter(handleStepEnter)\r\n\r\n\t\t\t// setup resize event\r\n\t\t\twindow.addEventListener('resize', handleResize);\r\n\r\n\t\t}\r\n\r\n\t\tinit()\r\n\t});\r\n}\r\n"]}